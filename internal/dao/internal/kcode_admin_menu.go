// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminMenuDao is the data access object for table kcode_admin_menu.
type KcodeAdminMenuDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns KcodeAdminMenuColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminMenuColumns defines and stores column names for table kcode_admin_menu.
type KcodeAdminMenuColumns struct {
	Id         string //
	Pid        string // 上级菜单id
	Module     string // 模块名称
	Title      string // 菜单标题
	Icon       string // 菜单图标
	UrlType    string // 链接类型（link：外链，module：模块）
	UrlValue   string // 链接地址
	UrlTarget  string // 链接打开方式：_blank,_self
	OnlineHide string // 网站上线后是否隐藏
	CreateTime string // 创建时间
	UpdateTime string // 更新时间
	Sort       string // 排序
	SystemMenu string // 是否为系统菜单，系统菜单不可删除
	Status     string // 状态
	Params     string // 参数
}

// kcodeAdminMenuColumns holds the columns for table kcode_admin_menu.
var kcodeAdminMenuColumns = KcodeAdminMenuColumns{
	Id:         "id",
	Pid:        "pid",
	Module:     "module",
	Title:      "title",
	Icon:       "icon",
	UrlType:    "url_type",
	UrlValue:   "url_value",
	UrlTarget:  "url_target",
	OnlineHide: "online_hide",
	CreateTime: "create_time",
	UpdateTime: "update_time",
	Sort:       "sort",
	SystemMenu: "system_menu",
	Status:     "status",
	Params:     "params",
}

// NewKcodeAdminMenuDao creates and returns a new DAO object for table data access.
func NewKcodeAdminMenuDao() *KcodeAdminMenuDao {
	return &KcodeAdminMenuDao{
		group:   "default",
		table:   "kcode_admin_menu",
		columns: kcodeAdminMenuColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminMenuDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminMenuDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminMenuDao) Columns() KcodeAdminMenuColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminMenuDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminMenuDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminMenuDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
