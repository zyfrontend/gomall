// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeJobOrderDao is the data access object for table kcode_job_order.
type KcodeJobOrderDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns KcodeJobOrderColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeJobOrderColumns defines and stores column names for table kcode_job_order.
type KcodeJobOrderColumns struct {
	OrderId    string //
	OrderSn    string //
	UserId     string //
	JobId      string // 节点ID
	AddTime    string // 添加时间
	Status     string // 0排队中1待审核2已通过
	UpdateTime string // 修改时间
}

// kcodeJobOrderColumns holds the columns for table kcode_job_order.
var kcodeJobOrderColumns = KcodeJobOrderColumns{
	OrderId:    "order_id",
	OrderSn:    "order_sn",
	UserId:     "user_id",
	JobId:      "job_id",
	AddTime:    "add_time",
	Status:     "status",
	UpdateTime: "update_time",
}

// NewKcodeJobOrderDao creates and returns a new DAO object for table data access.
func NewKcodeJobOrderDao() *KcodeJobOrderDao {
	return &KcodeJobOrderDao{
		group:   "default",
		table:   "kcode_job_order",
		columns: kcodeJobOrderColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeJobOrderDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeJobOrderDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeJobOrderDao) Columns() KcodeJobOrderColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeJobOrderDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeJobOrderDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeJobOrderDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
