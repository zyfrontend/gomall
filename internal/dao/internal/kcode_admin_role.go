// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminRoleDao is the data access object for table kcode_admin_role.
type KcodeAdminRoleDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns KcodeAdminRoleColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminRoleColumns defines and stores column names for table kcode_admin_role.
type KcodeAdminRoleColumns struct {
	Id            string // 角色id
	Pid           string // 上级角色
	Name          string // 角色名称
	Description   string // 角色描述
	MenuAuth      string // 菜单权限
	Sort          string // 排序
	CreateTime    string // 创建时间
	UpdateTime    string // 更新时间
	Status        string // 状态
	Access        string // 是否可登录后台
	DefaultModule string // 默认访问模块
}

// kcodeAdminRoleColumns holds the columns for table kcode_admin_role.
var kcodeAdminRoleColumns = KcodeAdminRoleColumns{
	Id:            "id",
	Pid:           "pid",
	Name:          "name",
	Description:   "description",
	MenuAuth:      "menu_auth",
	Sort:          "sort",
	CreateTime:    "create_time",
	UpdateTime:    "update_time",
	Status:        "status",
	Access:        "access",
	DefaultModule: "default_module",
}

// NewKcodeAdminRoleDao creates and returns a new DAO object for table data access.
func NewKcodeAdminRoleDao() *KcodeAdminRoleDao {
	return &KcodeAdminRoleDao{
		group:   "default",
		table:   "kcode_admin_role",
		columns: kcodeAdminRoleColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminRoleDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminRoleDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminRoleDao) Columns() KcodeAdminRoleColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminRoleDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminRoleDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminRoleDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
