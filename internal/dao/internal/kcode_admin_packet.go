// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminPacketDao is the data access object for table kcode_admin_packet.
type KcodeAdminPacketDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns KcodeAdminPacketColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminPacketColumns defines and stores column names for table kcode_admin_packet.
type KcodeAdminPacketColumns struct {
	Id         string //
	Name       string // 数据包名
	Title      string // 数据包标题
	Author     string // 作者
	AuthorUrl  string // 作者url
	Version    string //
	Tables     string // 数据表名
	CreateTime string // 创建时间
	UpdateTime string // 更新时间
	Status     string // 状态
}

// kcodeAdminPacketColumns holds the columns for table kcode_admin_packet.
var kcodeAdminPacketColumns = KcodeAdminPacketColumns{
	Id:         "id",
	Name:       "name",
	Title:      "title",
	Author:     "author",
	AuthorUrl:  "author_url",
	Version:    "version",
	Tables:     "tables",
	CreateTime: "create_time",
	UpdateTime: "update_time",
	Status:     "status",
}

// NewKcodeAdminPacketDao creates and returns a new DAO object for table data access.
func NewKcodeAdminPacketDao() *KcodeAdminPacketDao {
	return &KcodeAdminPacketDao{
		group:   "default",
		table:   "kcode_admin_packet",
		columns: kcodeAdminPacketColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminPacketDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminPacketDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminPacketDao) Columns() KcodeAdminPacketColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminPacketDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminPacketDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminPacketDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
