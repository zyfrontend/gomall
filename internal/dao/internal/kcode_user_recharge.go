// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeUserRechargeDao is the data access object for table kcode_user_recharge.
type KcodeUserRechargeDao struct {
	table   string                   // table is the underlying table name of the DAO.
	group   string                   // group is the database configuration group name of current DAO.
	columns KcodeUserRechargeColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeUserRechargeColumns defines and stores column names for table kcode_user_recharge.
type KcodeUserRechargeColumns struct {
	Id             string //
	UserId         string //
	PayAddress     string // 客户钱包地址
	WalletAddress  string // 商家收款钱包地址
	Hash           string // hash
	CreateTime     string // 创建时间
	Status         string // 是否已经处理 0 未处理 1 已经处理 2处理失败
	Money          string // 充值金额
	SetStatus      string // 脚本执行装0未执行， 1已执行
	UpdateTime     string // 审核时间
	Content        string // 备注
	PayImg         string // 打款凭证
	RechargeStatus string // 充值状态（0=待确认,1'已到账',2'到账失败'）
	MoneyType      string // 币种类型
}

// kcodeUserRechargeColumns holds the columns for table kcode_user_recharge.
var kcodeUserRechargeColumns = KcodeUserRechargeColumns{
	Id:             "id",
	UserId:         "user_id",
	PayAddress:     "pay_address",
	WalletAddress:  "wallet_address",
	Hash:           "hash",
	CreateTime:     "create_time",
	Status:         "status",
	Money:          "money",
	SetStatus:      "set_status",
	UpdateTime:     "update_time",
	Content:        "content",
	PayImg:         "pay_img",
	RechargeStatus: "recharge_status",
	MoneyType:      "money_type",
}

// NewKcodeUserRechargeDao creates and returns a new DAO object for table data access.
func NewKcodeUserRechargeDao() *KcodeUserRechargeDao {
	return &KcodeUserRechargeDao{
		group:   "default",
		table:   "kcode_user_recharge",
		columns: kcodeUserRechargeColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeUserRechargeDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeUserRechargeDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeUserRechargeDao) Columns() KcodeUserRechargeColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeUserRechargeDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeUserRechargeDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeUserRechargeDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
