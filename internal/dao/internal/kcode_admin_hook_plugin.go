// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminHookPluginDao is the data access object for table kcode_admin_hook_plugin.
type KcodeAdminHookPluginDao struct {
	table   string                      // table is the underlying table name of the DAO.
	group   string                      // group is the database configuration group name of current DAO.
	columns KcodeAdminHookPluginColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminHookPluginColumns defines and stores column names for table kcode_admin_hook_plugin.
type KcodeAdminHookPluginColumns struct {
	Id         string //
	Hook       string // 钩子id
	Plugin     string // 插件标识
	CreateTime string // 添加时间
	UpdateTime string // 更新时间
	Sort       string // 排序
	Status     string // 状态
}

// kcodeAdminHookPluginColumns holds the columns for table kcode_admin_hook_plugin.
var kcodeAdminHookPluginColumns = KcodeAdminHookPluginColumns{
	Id:         "id",
	Hook:       "hook",
	Plugin:     "plugin",
	CreateTime: "create_time",
	UpdateTime: "update_time",
	Sort:       "sort",
	Status:     "status",
}

// NewKcodeAdminHookPluginDao creates and returns a new DAO object for table data access.
func NewKcodeAdminHookPluginDao() *KcodeAdminHookPluginDao {
	return &KcodeAdminHookPluginDao{
		group:   "default",
		table:   "kcode_admin_hook_plugin",
		columns: kcodeAdminHookPluginColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminHookPluginDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminHookPluginDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminHookPluginDao) Columns() KcodeAdminHookPluginColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminHookPluginDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminHookPluginDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminHookPluginDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
