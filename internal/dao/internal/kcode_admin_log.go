// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminLogDao is the data access object for table kcode_admin_log.
type KcodeAdminLogDao struct {
	table   string               // table is the underlying table name of the DAO.
	group   string               // group is the database configuration group name of current DAO.
	columns KcodeAdminLogColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminLogColumns defines and stores column names for table kcode_admin_log.
type KcodeAdminLogColumns struct {
	Id         string // 主键
	ActionId   string // 行为id
	UserId     string // 执行用户id
	ActionIp   string // 执行行为者ip
	Model      string // 触发行为的表
	RecordId   string // 触发行为的数据id
	Remark     string // 日志备注
	Status     string // 状态
	CreateTime string // 执行行为的时间
}

// kcodeAdminLogColumns holds the columns for table kcode_admin_log.
var kcodeAdminLogColumns = KcodeAdminLogColumns{
	Id:         "id",
	ActionId:   "action_id",
	UserId:     "user_id",
	ActionIp:   "action_ip",
	Model:      "model",
	RecordId:   "record_id",
	Remark:     "remark",
	Status:     "status",
	CreateTime: "create_time",
}

// NewKcodeAdminLogDao creates and returns a new DAO object for table data access.
func NewKcodeAdminLogDao() *KcodeAdminLogDao {
	return &KcodeAdminLogDao{
		group:   "default",
		table:   "kcode_admin_log",
		columns: kcodeAdminLogColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminLogDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminLogDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminLogDao) Columns() KcodeAdminLogColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminLogDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminLogDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminLogDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
