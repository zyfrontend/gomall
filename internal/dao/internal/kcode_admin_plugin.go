// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminPluginDao is the data access object for table kcode_admin_plugin.
type KcodeAdminPluginDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns KcodeAdminPluginColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminPluginColumns defines and stores column names for table kcode_admin_plugin.
type KcodeAdminPluginColumns struct {
	Id          string //
	Name        string // 插件名称
	Title       string // 插件标题
	Icon        string // 图标
	Description string // 插件描述
	Author      string // 作者
	AuthorUrl   string // 作者主页
	Config      string // 配置信息
	Version     string // 版本号
	Identifier  string // 插件唯一标识符
	Admin       string // 是否有后台管理
	CreateTime  string // 安装时间
	UpdateTime  string // 更新时间
	Sort        string // 排序
	Status      string // 状态
}

// kcodeAdminPluginColumns holds the columns for table kcode_admin_plugin.
var kcodeAdminPluginColumns = KcodeAdminPluginColumns{
	Id:          "id",
	Name:        "name",
	Title:       "title",
	Icon:        "icon",
	Description: "description",
	Author:      "author",
	AuthorUrl:   "author_url",
	Config:      "config",
	Version:     "version",
	Identifier:  "identifier",
	Admin:       "admin",
	CreateTime:  "create_time",
	UpdateTime:  "update_time",
	Sort:        "sort",
	Status:      "status",
}

// NewKcodeAdminPluginDao creates and returns a new DAO object for table data access.
func NewKcodeAdminPluginDao() *KcodeAdminPluginDao {
	return &KcodeAdminPluginDao{
		group:   "default",
		table:   "kcode_admin_plugin",
		columns: kcodeAdminPluginColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminPluginDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminPluginDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminPluginDao) Columns() KcodeAdminPluginColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminPluginDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminPluginDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminPluginDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
