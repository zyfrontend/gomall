// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodeAdminHookDao is the data access object for table kcode_admin_hook.
type KcodeAdminHookDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns KcodeAdminHookColumns // columns contains all the column names of Table for convenient usage.
}

// KcodeAdminHookColumns defines and stores column names for table kcode_admin_hook.
type KcodeAdminHookColumns struct {
	Id          string //
	Name        string // 钩子名称
	Plugin      string // 钩子来自哪个插件
	Description string // 钩子描述
	System      string // 是否为系统钩子
	CreateTime  string // 创建时间
	UpdateTime  string // 更新时间
	Status      string // 状态
}

// kcodeAdminHookColumns holds the columns for table kcode_admin_hook.
var kcodeAdminHookColumns = KcodeAdminHookColumns{
	Id:          "id",
	Name:        "name",
	Plugin:      "plugin",
	Description: "description",
	System:      "system",
	CreateTime:  "create_time",
	UpdateTime:  "update_time",
	Status:      "status",
}

// NewKcodeAdminHookDao creates and returns a new DAO object for table data access.
func NewKcodeAdminHookDao() *KcodeAdminHookDao {
	return &KcodeAdminHookDao{
		group:   "default",
		table:   "kcode_admin_hook",
		columns: kcodeAdminHookColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodeAdminHookDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodeAdminHookDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodeAdminHookDao) Columns() KcodeAdminHookColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodeAdminHookDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodeAdminHookDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodeAdminHookDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
