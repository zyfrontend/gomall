// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// KcodePayTempDao is the data access object for table kcode_pay_temp.
type KcodePayTempDao struct {
	table   string              // table is the underlying table name of the DAO.
	group   string              // group is the database configuration group name of current DAO.
	columns KcodePayTempColumns // columns contains all the column names of Table for convenient usage.
}

// KcodePayTempColumns defines and stores column names for table kcode_pay_temp.
type KcodePayTempColumns struct {
	Id              string //
	UserId          string //
	AddTime         string //
	Method          string //
	Param           string //
	Status          string //
	Money           string //
	ContractAddress string // 合约地址
	WalletAddress   string // 收款钱包
	Hash            string // 此hash前端传2时有
}

// kcodePayTempColumns holds the columns for table kcode_pay_temp.
var kcodePayTempColumns = KcodePayTempColumns{
	Id:              "id",
	UserId:          "user_id",
	AddTime:         "add_time",
	Method:          "method",
	Param:           "param",
	Status:          "status",
	Money:           "money",
	ContractAddress: "contract_address",
	WalletAddress:   "wallet_address",
	Hash:            "hash",
}

// NewKcodePayTempDao creates and returns a new DAO object for table data access.
func NewKcodePayTempDao() *KcodePayTempDao {
	return &KcodePayTempDao{
		group:   "default",
		table:   "kcode_pay_temp",
		columns: kcodePayTempColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *KcodePayTempDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *KcodePayTempDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *KcodePayTempDao) Columns() KcodePayTempColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *KcodePayTempDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *KcodePayTempDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *KcodePayTempDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
